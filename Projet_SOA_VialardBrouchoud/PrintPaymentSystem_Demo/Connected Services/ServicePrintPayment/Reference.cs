//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintPaymentSystem_Demo.ServicePrintPayment {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuotaReturn", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class QuotaReturn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quotaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quota {
            get {
                return this.quotaField;
            }
            set {
                if ((this.quotaField.Equals(value) != true)) {
                    this.quotaField = value;
                    this.RaisePropertyChanged("quota");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePrintPayment.IPrintPaymentService")]
    public interface IPrintPaymentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddChfByCardId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddChfByCardIdResponse")]
        PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn AddChfByCardId(string cardId, decimal chf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddChfByCardId", ReplyAction="http://tempuri.org/IPrintPaymentService/AddChfByCardIdResponse")]
        System.Threading.Tasks.Task<PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn> AddChfByCardIdAsync(string cardId, decimal chf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddChfByUsername", ReplyAction="http://tempuri.org/IPrintPaymentService/AddChfByUsernameResponse")]
        PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn AddChfByUsername(string username, decimal chf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/AddChfByUsername", ReplyAction="http://tempuri.org/IPrintPaymentService/AddChfByUsernameResponse")]
        System.Threading.Tasks.Task<PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn> AddChfByUsernameAsync(string username, decimal chf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/CreateUser", ReplyAction="http://tempuri.org/IPrintPaymentService/CreateUserResponse")]
        bool CreateUser(string username, string cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/CreateUser", ReplyAction="http://tempuri.org/IPrintPaymentService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(string username, string cardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/RemoveQuota", ReplyAction="http://tempuri.org/IPrintPaymentService/RemoveQuotaResponse")]
        bool RemoveQuota(string username, int quota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPaymentService/RemoveQuota", ReplyAction="http://tempuri.org/IPrintPaymentService/RemoveQuotaResponse")]
        System.Threading.Tasks.Task<bool> RemoveQuotaAsync(string username, int quota);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrintPaymentServiceChannel : PrintPaymentSystem_Demo.ServicePrintPayment.IPrintPaymentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintPaymentServiceClient : System.ServiceModel.ClientBase<PrintPaymentSystem_Demo.ServicePrintPayment.IPrintPaymentService>, PrintPaymentSystem_Demo.ServicePrintPayment.IPrintPaymentService {
        
        public PrintPaymentServiceClient() {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn AddChfByCardId(string cardId, decimal chf) {
            return base.Channel.AddChfByCardId(cardId, chf);
        }
        
        public System.Threading.Tasks.Task<PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn> AddChfByCardIdAsync(string cardId, decimal chf) {
            return base.Channel.AddChfByCardIdAsync(cardId, chf);
        }
        
        public PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn AddChfByUsername(string username, decimal chf) {
            return base.Channel.AddChfByUsername(username, chf);
        }
        
        public System.Threading.Tasks.Task<PrintPaymentSystem_Demo.ServicePrintPayment.QuotaReturn> AddChfByUsernameAsync(string username, decimal chf) {
            return base.Channel.AddChfByUsernameAsync(username, chf);
        }
        
        public bool CreateUser(string username, string cardId) {
            return base.Channel.CreateUser(username, cardId);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(string username, string cardId) {
            return base.Channel.CreateUserAsync(username, cardId);
        }
        
        public bool RemoveQuota(string username, int quota) {
            return base.Channel.RemoveQuota(username, quota);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveQuotaAsync(string username, int quota) {
            return base.Channel.RemoveQuotaAsync(username, quota);
        }
    }
}
